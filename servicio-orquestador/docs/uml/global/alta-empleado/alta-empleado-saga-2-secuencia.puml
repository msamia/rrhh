@startuml
title SAGA - Alta de Empleado (Parte 2 de 2)
autonumber

participant "StateMachine"          as SM
participant "SagaOrchestratorService" as Orquestador
participant "SagaResilienceAspect"  as Aspect
participant "EntrenamientoSagaActions" as EntrenamientoActions
participant "servicio-entrenamiento" as EntrenamientoClient
participant "NominaSagaActions"     as NominaActions
participant "servicio-nomina"       as NominaClient
participant "servicio-consultas"    as Consultas

'--- Interceptación antes de ejecutar doAsignarEntrenamiento() ---
Orquestador -> SM : sendEvent(ASIGNAR_ENTRENAMIENTO)
activate SM
SM -> Aspect : intercept(doAsignarEntrenamiento)
activate Aspect

'--- Aspecto invoca la acción de asignar entrenamiento ---
Aspect -> EntrenamientoActions : doAsignarEntrenamiento(context)
activate EntrenamientoActions

'--- EntrenamientoSagaActions llama al microservicio Entrenamiento ---
EntrenamientoActions -> EntrenamientoClient : asignar(empleadoId)
EntrenamientoClient --> EntrenamientoActions : Entrenamiento asignado

'--- Retorno al aspecto ---
EntrenamientoActions --> Aspect : success
deactivate EntrenamientoActions

'--- Aspect retorna al StateMachine ---
Aspect --> SM : return
deactivate Aspect

SM -> Orquestador : (ack)
Orquestador -> SM : sendEvent(PROCESAR_NOMINA)
activate SM

'--- Interceptación antes de ejecutar doProcesarNomina() ---
SM -> Aspect : intercept(doProcesarNomina)
activate Aspect

'--- Aspecto invoca la acción de procesar nómina ---
Aspect -> NominaActions : doProcesarNomina(context)
activate NominaActions

'--- NominaSagaActions llama al microservicio Nómina ---
NominaActions -> NominaClient : procesar(empleadoId)
NominaClient --> NominaActions : Nómina generada

'--- Retorno al aspecto ---
NominaActions --> Aspect : success
deactivate NominaActions

'--- Aspect retorna al StateMachine ---
Aspect --> SM : return
deactivate Aspect

SM -> Orquestador : (ack)
Orquestador -> SM : sendEvent(FINALIZAR_SAGA)
activate SM

SM -> Orquestador : sagaFinalizada()
Orquestador -> Consultas : guardarResultado(sagaId, COMPLETADO)

@enduml
