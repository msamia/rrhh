@startuml
title SAGA - Alta de Empleado (Parte 1 de 2)
autonumber

actor Cliente
participant "API Gateway"        as Gateway
participant "SagaController"     as Controller
participant "SagaOrchestratorService" as Orquestador
participant "StateMachine"       as SM
participant "SagaResilienceAspect" as Aspect
participant "EmpleadoSagaActions" as EmpleadoActions
participant "ContratoSagaActions" as ContratoActions
participant "servicio-empleado"  as EmpleadoClient
participant "servicio-contrato"  as ContratoClient

Cliente -> Gateway : POST /api/saga/empleados\n{empleadoDto}
Gateway -> Controller : createEmployee(empleadoDto)
Controller -> Orquestador : startSaga(empleadoDto)
Orquestador -> SM : sendEvent(CREATE_EMPLOYEE)
activate SM

'--- Interceptación del aspecto antes de ejecutar doCreateEmployee() ---
SM -> Aspect : intercept(doCreateEmployee)
activate Aspect

'--- Aspecto invoca la acción de crear empleado ---
Aspect -> EmpleadoActions : doCreateEmployee(context)
activate EmpleadoActions

'--- EmpleadoSagaActions llama al microservicio Empleado ---
EmpleadoActions -> EmpleadoClient : create(empleadoDto)
EmpleadoClient --> EmpleadoActions : Empleado creado

'--- EmpleadoSagaActions retorna al aspecto ---
EmpleadoActions --> Aspect : success
deactivate EmpleadoActions

'--- Aspect retorna al StateMachine ---
Aspect --> SM : return
deactivate Aspect

SM -> Orquestador : (ack)
Orquestador -> SM : sendEvent(CREATE_CONTRATO)
activate SM

'--- Interceptación del aspecto antes de ejecutar doCreateContrato() ---
SM -> Aspect : intercept(doCreateContrato)
activate Aspect

'--- Aspecto invoca la acción de crear contrato ---
Aspect -> ContratoActions : doCreateContrato(context)
activate ContratoActions

'--- ContratoSagaActions llama al microservicio Contrato ---
ContratoActions -> ContratoClient : create(contratoDto)
ContratoClient --> ContratoActions : Contrato creado

'--- ContratoSagaActions retorna al aspecto ---
ContratoActions --> Aspect : success
deactivate ContratoActions

'--- Aspect retorna al StateMachine ---
Aspect --> SM : return
deactivate Aspect

SM -> Orquestador : (ack)
Orquestador -> SM : sendEvent(ASIGNAR_ENTRENAMIENTO)

note right of Orquestador
Continúa en:
alta-empleado-saga-2-secuencia.puml
end note

@enduml
